# This is a basic workflow to help you get started with Actions

name: Publish Addon

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 information:
    name: ℹ️ Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.information.outputs.architectures }}
      build: ${{ steps.information.outputs.build }}
      description: ${{ steps.information.outputs.description }}
      environment: ${{ steps.release.outputs.environment }}
      name: ${{ steps.information.outputs.name }}
      slug: ${{ steps.information.outputs.slug }}
      target: ${{ steps.information.outputs.target }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v2.3.4
      - name: 🚀 Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1.2.2
      - name: ℹ️ Gather version and environment
        id: release
        run: |
          sha="${{ github.sha }}"
          environment="edge"
          version="${sha:0:7}"
          if [[ "${{ github.event_name }}" = "release" ]]; then
            version="${{ github.event.release.tag_name }}"
            version="${version,,}"
            version="${version#v}"
            environment="stable"
            if [[ "${{ github.event.release.prerelease }}" = "true" ]]; then
              environment="beta"
            fi
          fi
          echo "::set-output name=environment::${environment}"
          echo "::set-output name=version::${version}"
 
 publish:
    name: 📢 Publish repository
    needs:
      - information
    environment:
      name: ${{ needs.information.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Dispatch repository updater update signal
        uses: peter-evans/repository-dispatch@v1.1.3
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          repository: ${{ github.repository_owner }}/hassio-addons
          event-type: update
          client-payload: >
            {
              "addon": "${{ needs.information.outputs.slug }}",
              "name": "${{ needs.information.outputs.name }}",
              "repository": "${{ github.repository }}",
              "version": "${{ needs.information.outputs.version }}"
            }
